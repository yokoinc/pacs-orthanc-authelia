# PAX-MA-STACK - Orthanc with OHIF Viewer and Authelia Authentication
# Complete medical imaging solution with PostgreSQL, Redis, and Nginx reverse proxy

version: '3.8'

services:
  # =============================================================================
  # DATABASE SERVICES
  # =============================================================================
  
  postgres:
    image: postgres:15
    container_name: pax-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}              # Database name for Orthanc PACS
      POSTGRES_USER: ${POSTGRES_USER}            # Database user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  # Database password (change in production)
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persistent database storage
    networks:
      - pax-network

  redis:
    image: redis:alpine
    container_name: pax-redis
    restart: unless-stopped
    networks:
      - pax-network                 # Session storage for Authelia

  # =============================================================================
  # AUTHENTICATION SERVICES
  # =============================================================================
  
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: pax-auth-service
    restart: unless-stopped
    environment:
      # Authentication
      - AUTH_USERNAME=${AUTH_USERNAME}
      - AUTH_PASSWORD=${AUTH_PASSWORD}
      # Redis
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      # Logging
      - LOG_LEVEL=${LOG_LEVEL}
      # CDN
      - FONT_AWESOME_CDN=${FONT_AWESOME_CDN}
      # Token configuration
      - DEFAULT_TOKEN_MAX_USES=${DEFAULT_TOKEN_MAX_USES}
      - DEFAULT_TOKEN_VALIDITY_SECONDS=${DEFAULT_TOKEN_VALIDITY_SECONDS}
      - CACHE_VALIDITY_USER_SESSION=${CACHE_VALIDITY_USER_SESSION}
      - CACHE_VALIDITY_SHARE_TOKEN=${CACHE_VALIDITY_SHARE_TOKEN}
      - UNLIMITED_TOKEN_DURATION=${UNLIMITED_TOKEN_DURATION}
      # Audit
      - AUDIT_RETENTION_DAYS=${AUDIT_RETENTION_DAYS}
      # JavaScript config
      - JS_REFRESH_INTERVAL=${JS_REFRESH_INTERVAL}
      - JS_API_BASE=${JS_API_BASE}
      - JS_DEBUG_MODE=${JS_DEBUG_MODE}
      # UI Messages (French)
      - UI_MSG_INVALID_TOKEN=${UI_MSG_INVALID_TOKEN}
      - UI_MSG_EXPIRED_TOKEN=${UI_MSG_EXPIRED_TOKEN}
      - UI_MSG_NO_STUDY=${UI_MSG_NO_STUDY}
      - UI_MSG_INVALID_STUDY=${UI_MSG_INVALID_STUDY}
      - UI_MSG_USAGE_LIMIT=${UI_MSG_USAGE_LIMIT}
    volumes:
      - ./services/auth-service/auth_service.py:/app/auth_service.py:ro  # Mount Python file directly
      - ./services/auth-service/static:/app/static:ro  # Mount static files
      - ./services/auth-service/templates:/app/templates:ro  # Mount templates
    networks:
      - pax-network                 # Custom authentication service

  authelia:
    image: authelia/authelia:4.38.8
    container_name: pax-authelia
    restart: unless-stopped
    depends_on:
      - redis                           # Requires Redis for session storage
    volumes:
      - ./services/authelia/config:/config  # Configuration and user database
    networks:
      - pax-network
    environment:
      - TZ=${TZ}                          # Timezone for session management
      - AUTHELIA_SESSION_SECRET=${AUTHELIA_SESSION_SECRET}
      - AUTHELIA_STORAGE_ENCRYPTION_KEY=${AUTHELIA_STORAGE_ENCRYPTION_KEY}
      - AUTHELIA_JWT_SECRET=${AUTHELIA_JWT_SECRET}
      - AUTHELIA_DOMAIN=${AUTHELIA_DOMAIN:-pacs.example.com}
      - AUTHELIA_LOG_LEVEL=${AUTHELIA_LOG_LEVEL:-info}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_DB=${REDIS_DB:-0}

  # =============================================================================
  # PACS CORE SERVICES
  # =============================================================================
  
  orthanc:
    image: jodogne/orthanc-plugins:latest  # x86_64 only - core PACS server
    container_name: pax-orthanc
    restart: unless-stopped
    depends_on:
      - postgres                        # Database for DICOM metadata
      - auth-service                    # Authentication service
    volumes:
      - ./services/orthanc/config/orthanc.json:/etc/orthanc/orthanc.json:ro  # PACS configuration
      - ./services/orthanc/plugins:/var/lib/orthanc/plugins:ro  # Custom plugins directory
    networks:
      - pax-network

  # =============================================================================
  # MEDICAL IMAGING VIEWERS
  # =============================================================================
  
  ohif:
    image: registry.yokoinc.ovh/pacs-ohif:3.10.2
    container_name: pax-ohif
    restart: unless-stopped
    environment:
      - PUBLIC_URL=${OHIF_PUBLIC_URL}               # Base URL for OHIF viewer
      - HTTPS=${OHIF_HTTPS}                      # Enable HTTPS mode
    volumes:
      - ./services/ohif/config/app-config.js:/usr/share/nginx/html/ohif/app-config.js:ro  # OHIF configuration
    networks:
      - pax-network

  # =============================================================================
  # REVERSE PROXY & LOAD BALANCER
  # =============================================================================
  
  nginx:
    image: nginx:alpine
    container_name: pax-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_EXTERNAL_PORT}:80"                     # External port for PACS access
    volumes:
      - ./services/reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:ro           # Main proxy configuration
      - ./services/reverse-proxy/conf.d:/etc/nginx/conf.d:ro                   # Additional configurations
    depends_on:
      - orthanc                         # PACS server
      - ohif                            # OHIF viewer
    networks:
      - pax-network

# =============================================================================
# PERSISTENT STORAGE
# =============================================================================

volumes:
  postgres_data:                        # PostgreSQL database persistence

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

networks:
  pax-network:
    driver: bridge                      # Internal network for service communication