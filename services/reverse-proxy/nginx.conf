# =============================================================================
# NGINX REVERSE PROXY CONFIGURATION FOR PACS STACK
# =============================================================================
# Routes all traffic to Orthanc PACS, OHIF viewer, and Authelia authentication
# Handles security headers, authentication, and static asset optimization

user nginx;
worker_processes auto;                  # Auto-detect CPU cores
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;            # Maximum concurrent connections per worker
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # =============================================================================
    # LOGGING CONFIGURATION
    # =============================================================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # =============================================================================
    # PERFORMANCE OPTIMIZATION
    # =============================================================================
    sendfile on;                        # Efficient file serving
    tcp_nopush on;                      # Optimize TCP packets
    tcp_nodelay on;                     # Disable Nagle's algorithm
    keepalive_timeout 65;               # Connection keepalive timeout
    types_hash_max_size 2048;          # Hash table size for MIME types
    client_max_body_size 2g;            # Maximum upload size for medical images

    # =============================================================================
    # COMPRESSION CONFIGURATION
    # =============================================================================
    gzip on;                            # Enable gzip compression
    gzip_vary on;                       # Add Vary: Accept-Encoding header
    gzip_proxied any;                   # Compress all proxied content
    gzip_comp_level 6;                  # Compression level (1-9)
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript 
               application/xml+rss application/rss+xml 
               application/atom+xml image/svg+xml;

    # =============================================================================
    # UPSTREAM SERVERS CONFIGURATION
    # =============================================================================
    upstream orthanc {
        server orthanc:8042;            # Orthanc PACS server
    }


    upstream authelia {
        server authelia:9091;           # Authelia authentication service
    }

    upstream auth_service {
        server auth-service:8000;       # Custom authentication service
    }

    # =============================================================================
    # AUTHENTICATION TOKEN MAPPING
    # =============================================================================
    # Maps user groups to API tokens for Orthanc access control
    map $groups $auth_token {
        ~admin    "admin-token";        # Full access for administrators
        ~doctor   "doctor-token";       # Medical access for doctors
        ~external "external-token";    # Limited access for external users
        default   "";                   # No access by default
    }
    

    server {
        listen 80;
        server_name localhost;
        
        # =============================================================================
        # BUFFER CONFIGURATION
        # =============================================================================
        large_client_header_buffers 8 16k;  # Large buffers for OHIF (15 studies)

        # =============================================================================
        # SECURITY HEADERS
        # =============================================================================
        include /etc/nginx/conf.d/security_headers.conf;

        etag off;                       # Disable ETags for better caching control

        # =============================================================================
        # ROOT REDIRECTION
        # =============================================================================
        location = / {
            return 302 /ui/app/;        # Redirect to Orthanc UI
        }

        # =============================================================================
        # STATIC ASSETS (NO AUTHENTICATION)
        # =============================================================================
        
        # Authelia static assets (highest priority with ^~)
        location ^~ /static/ {
            proxy_pass http://authelia/static/;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/remove_csp.conf;
            
            expires 1h;                 # Cache for 1 hour
            add_header Cache-Control "public, immutable";
        }

        # OHIF viewer assets (JavaScript, CSS, images) - no authentication required
        location ~* ^/ohif/.*\.(js|css|png|jpe?g|gif|svg|ico|webp|json|gz|wasm|woff|woff2|ttf|eot|map)$ {
            rewrite ^/ohif/(.*)$ /ohif/$1 break;
            proxy_pass http://ohif:8080;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/cors_ohif.conf;
        }
        
        # Use Orthanc Explorer 2 favicon for any app path requests
        location ~ ^/app/.*favicon\.ico$ {
            rewrite ^/app/.*favicon\.ico$ /ui/favicon.ico break;
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # OHIF assets accessed from app path (for token access)
        location /app/ {
            proxy_pass http://ohif:8080/ohif/;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/cors_ohif.conf;
        }
        
        # General static assets (Orthanc, Stone, VolView) - processed after specific routes
        location ~* \.(js|css|png|jpe?g|gif|svg|ico|webp|json|gz|wasm|woff|woff2|ttf|eot|map)$ {
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            
            expires 1y;                 # Long-term caching for static assets
            add_header Cache-Control "public, immutable";
        }

        # =============================================================================
        # AUTHENTICATED APPLICATION ROUTES
        # =============================================================================
        
        # Shared studies access (public with token validation and redirect to OHIF)
        location /share/ {
            proxy_pass http://auth_service/share/;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/security_headers.conf;
        }
        
        # API calls from share interface
        location /share/api/ {
            proxy_pass http://orthanc/api/;
            include /etc/nginx/conf.d/proxy_headers.conf;
        }
        
        # DICOM resources from share interface
        location ~ ^/share/(studies|series|instances|patients|tools|system|statistics|modalities|peers|plugins|jobs|changes|exports|preview)(?:/|$) {
            rewrite ^/share/(.*)$ /$1 break;
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/cors_headers.conf;
        }
        
        # Orthanc web interface
        location /ui/ {
            include /etc/nginx/conf.d/auth_request.conf;
            
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }
        
        # Stone WebViewer (high-performance WebAssembly viewer)
        location /stone-webviewer/ {
            include /etc/nginx/conf.d/auth_request.conf;
            
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }
        
        # VolView WebViewer (3D volumetric visualization)
        location /volview/ {
            include /etc/nginx/conf.d/auth_request.conf;
            
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }
        
        # OHIF Viewer (protected by Authelia)
        location /ohif/ {
            include /etc/nginx/conf.d/auth_request.conf;
            
            proxy_pass http://ohif:8080/ohif/;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
            include /etc/nginx/conf.d/cors_ohif.conf;
        }

        # =============================================================================
        # DICOM API ENDPOINTS (AUTHENTICATED)
        # =============================================================================
        
        # WADO (Web Access to DICOM Objects) - for OHIF image retrieval
        location /wado {
            include /etc/nginx/conf.d/auth_request.conf;
            include /etc/nginx/conf.d/extract_token.conf;
            
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }

        # DICOM-Web API (DICOMweb standard endpoints)
        location /dicom-web {
            include /etc/nginx/conf.d/auth_request.conf;
            include /etc/nginx/conf.d/extract_token.conf;
            
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }
        
        # Orthanc REST API (instances, patients, series, studies, etc.)
        location ~ ^/(instances|patients|series|studies|tools|system|statistics|modalities|peers|plugins|jobs|changes|exports|preview|shares|shared|publish)(?:/|$) {
            include /etc/nginx/conf.d/auth_request.conf;
            
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
            include /etc/nginx/conf.d/cors_headers.conf;
        }

        # =============================================================================
        # AUTHELIA AUTHENTICATION ENDPOINTS
        # =============================================================================
        
        # Redirect /auth to /auth/ for consistency
        location = /auth {
            return 302 /auth/;
        }

        # Authelia authentication interface
        location /auth/ {
            proxy_pass http://authelia/;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/remove_csp.conf;
            proxy_set_header X-Forwarded-Uri $request_uri;
        }


        # Token management interface (must be before /auth/tokens/)
        location /auth/tokens/manage {
            include /etc/nginx/conf.d/auth_request.conf;
            
            proxy_pass http://auth_service/tokens/manage;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }

        # Token statistics endpoint (must be before /auth/tokens/)
        location /auth/tokens/stats {
            include /etc/nginx/conf.d/auth_request.conf;
            
            proxy_pass http://auth_service/tokens/stats;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }

        # Authorization plugin token endpoints - exact match without slash
        location = /auth/tokens {
            include /etc/nginx/conf.d/auth_request.conf;
            
            proxy_pass http://auth_service/tokens;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }
        
        # Authorization plugin token endpoints - with slash
        location /auth/tokens/ {
            include /etc/nginx/conf.d/auth_request.conf;
            
            proxy_pass http://auth_service/tokens/;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }

        # Auth service static files
        location /auth/static/ {
            include /etc/nginx/conf.d/auth_request.conf;
            
            proxy_pass http://auth_service/static/;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
            
            # Set correct content-type for JavaScript files
            location ~* \.js$ {
                add_header Content-Type "application/javascript" always;
            }
        }
        
        
        # Authelia API endpoints
        location /api/ {
            proxy_pass http://authelia/api/;
            include /etc/nginx/conf.d/proxy_headers.conf;
            proxy_set_header Cookie $http_cookie;          # Forward cookies for session
        }

        # Internal authentication verification endpoint
        location /authelia/ {
            internal;                                       # Internal use only
            proxy_pass http://authelia/api/verify;
            proxy_pass_request_body off;                    # Don't forward request body
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URL https://$host$request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Cookie $http_cookie;
        }

        # =============================================================================
        # ADDITIONAL SERVICES
        # =============================================================================
        
        # Authelia manifest.json for PWA support
        location = /manifest.json {
            proxy_pass http://authelia/manifest.json;
            include /etc/nginx/conf.d/proxy_headers.conf;
        }

        # Authelia localization files
        location /locales/ {
            rewrite ^/locales/(.*)$ /static/locales/$1 break;
            proxy_pass http://authelia;
            include /etc/nginx/conf.d/proxy_headers.conf;
        }

        # Common web assets (favicon, manifest)
        location ~ ^/(favicon\.ico|manifest\.json)$ {
            proxy_pass http://authelia$request_uri;
            include /etc/nginx/conf.d/proxy_headers.conf;
        }


        # =============================================================================
        # ERROR HANDLING
        # =============================================================================
        
        # Handle 401 Unauthorized errors - redirect to Authelia login
        location @error401 {
            return 302 /auth/?rd=https://$host$request_uri;
        }
    }
}