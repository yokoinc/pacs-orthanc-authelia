user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 2g;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;

    # ============================================================================
    # UPSTREAMS
    # ============================================================================
    upstream orthanc {
        server orthanc:8042;
    }

    upstream ohif_viewer {
        server ohif:8080;
    }

    upstream authelia {
        server authelia:9091;
    }

    upstream auth_service {
        server auth-service:8000;
    }

    # ============================================================================
    # HELPER MAPS POUR SIMPLIFIER LA LOGIQUE
    # ============================================================================
    
    # Map pour déterminer le token selon le groupe
    map $groups $auth_token {
        ~admin    "admin-token";
        ~doctor   "doctor-token";
        ~external "external-token";
        default   "";
    }

    server {
        listen 80;
        server_name localhost;
        
        # Buffers pour OHIF (15 études)
        large_client_header_buffers 8 16k;

        # ============================================================================
        # HEADERS DE SÉCURITÉ GLOBAUX
        # ============================================================================
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header Referrer-Policy "same-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=()" always;

        etag off;

        # ============================================================================
        # REDIRECTION RACINE
        # ============================================================================
        location = / {
            return 302 /ui/app/;
        }

        # ============================================================================
        # GESTION CENTRALISÉE DES ASSETS STATIQUES
        # ============================================================================
        
        # Assets d'Authelia (priorité avec ^~)
        location ^~ /static/ {
            proxy_pass http://authelia/static/;
            include /etc/nginx/conf.d/proxy_headers.conf;
            
            # Supprimer headers CSP restrictifs
            proxy_hide_header Content-Security-Policy;
            proxy_hide_header X-Frame-Options;
            proxy_hide_header X-Content-Type-Options;
            
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # ============================================================================
        # ROUTES APPLICATIVES AVEC AUTHENTIFICATION
        # ============================================================================
        
        # Interface Orthanc
        location /ui/ {
            auth_request /authelia/;
            auth_request_set $user $upstream_http_remote_user;
            auth_request_set $groups $upstream_http_remote_groups;
            error_page 401 = @error401;
            
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }
        
        # Stone WebViewer
        location /stone-webviewer/ {
            auth_request /authelia/;
            auth_request_set $user $upstream_http_remote_user;
            auth_request_set $groups $upstream_http_remote_groups;
            error_page 401 = @error401;
            
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }
        
        # VolView WebViewer
        location /volview/ {
            auth_request /authelia/;
            auth_request_set $user $upstream_http_remote_user;
            auth_request_set $groups $upstream_http_remote_groups;
            error_page 401 = @error401;
            
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }
        
        # OHIF Assets - Sans authentification
        location ~* ^/ohif/.*\.(js|css|png|jpe?g|gif|svg|ico|webp|json|gz|wasm|woff|woff2|ttf|eot|map)$ {
            # Pas d'auth pour les assets
            proxy_pass http://ohif_viewer;
            include /etc/nginx/conf.d/proxy_headers.conf;
            
            # Headers spéciaux pour OHIF
            add_header Cross-Origin-Opener-Policy same-origin always;
            add_header Cross-Origin-Embedder-Policy require-corp always;
            add_header Cross-Origin-Resource-Policy cross-origin always;
        }
        
        # OHIF Viewer - Application avec auth
        location /ohif/ {
            auth_request /authelia/;
            auth_request_set $user $upstream_http_remote_user;
            auth_request_set $groups $upstream_http_remote_groups;
            error_page 401 = @error401;
            
            # Pas de rewrite - proxy direct avec le chemin complet
            proxy_pass http://ohif_viewer/;
            include /etc/nginx/conf.d/proxy_headers.conf;
            
            # Headers spéciaux pour OHIF
            add_header Cross-Origin-Opener-Policy same-origin always;
            add_header Cross-Origin-Embedder-Policy require-corp always;
            add_header Cross-Origin-Resource-Policy cross-origin always;
        }
        
        # Tous les autres assets (Orthanc, Stone, VolView) - APRÈS les routes spécifiques
        location ~* \.(js|css|png|jpe?g|gif|svg|ico|webp|json|gz|wasm|woff|woff2|ttf|eot|map)$ {
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # ============================================================================
        # API ORTHANC AVEC SÉCURITÉ
        # ============================================================================
        
        # WADO/DICOM-Web pour OHIF (avec auth)
        location /wado {
            auth_request /authelia/;
            auth_request_set $user $upstream_http_remote_user;
            auth_request_set $groups $upstream_http_remote_groups;
            error_page 401 = @error401;
            
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }

        location /dicom-web {
            auth_request /authelia/;
            auth_request_set $user $upstream_http_remote_user;
            auth_request_set $groups $upstream_http_remote_groups;
            error_page 401 = @error401;
            
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
        }
        
        # API générale Orthanc
        location ~ ^/(instances|patients|series|studies|tools|system|statistics|modalities|peers|plugins|jobs|changes|exports|preview|shares|shared|publish)(?:/|$) {
            auth_request /authelia/;
            auth_request_set $user $upstream_http_remote_user;
            auth_request_set $groups $upstream_http_remote_groups;
            error_page 401 = @error401;
            
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
            
            # CORS pour l'API
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With';
        }

        # ============================================================================
        # AUTHELIA - AUTHENTIFICATION
        # ============================================================================
        
        location = /auth {
            return 302 /auth/;
        }

        location /auth/ {
            proxy_pass http://authelia/;
            include /etc/nginx/conf.d/proxy_headers.conf;
            proxy_set_header X-Forwarded-Uri $request_uri;
            
            proxy_hide_header Content-Security-Policy;
            proxy_hide_header X-Frame-Options;
            proxy_hide_header X-Content-Type-Options;
        }

        location /api/ {
            proxy_pass http://authelia/api/;
            include /etc/nginx/conf.d/proxy_headers.conf;
            proxy_set_header Cookie $http_cookie;
        }

        location /authelia/ {
            internal;
            proxy_pass http://authelia/api/verify;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URL https://$host$request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Cookie $http_cookie;
        }

        # ============================================================================
        # AUTRES SERVICES
        # ============================================================================
        
        location = /manifest.json {
            proxy_pass http://authelia/manifest.json;
            include /etc/nginx/conf.d/proxy_headers.conf;
        }

        location /locales/ {
            rewrite ^/locales/(.*)$ /static/locales/$1 break;
            proxy_pass http://authelia;
            include /etc/nginx/conf.d/proxy_headers.conf;
        }

        location ~ ^/(favicon\.ico|manifest\.json)$ {
            proxy_pass http://authelia$request_uri;
            include /etc/nginx/conf.d/proxy_headers.conf;
        }

        location /auth-service/ {
            proxy_pass http://auth_service/;
            include /etc/nginx/conf.d/proxy_headers.conf;
            proxy_set_header X-Auth-User $user;
            proxy_set_header X-Auth-Groups $groups;
        }

        location /orthanc/ {
            auth_request /authelia/;
            auth_request_set $user $upstream_http_remote_user;
            auth_request_set $groups $upstream_http_remote_groups;
            error_page 401 = @error401;
            
            rewrite /orthanc/(.*) /$1 break;
            proxy_pass http://orthanc;
            include /etc/nginx/conf.d/proxy_headers.conf;
            include /etc/nginx/conf.d/auth_headers.conf;
            
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With';
        }

        # ============================================================================
        # GESTION DES ERREURS
        # ============================================================================
        
        location @error401 {
            return 302 /auth/?rd=https://$host$request_uri;
        }
    }
}